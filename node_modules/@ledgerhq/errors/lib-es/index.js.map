{"version":3,"sources":["../src/index.js"],"names":["serializeError","deserializeError","createCustomErrorClass","addCustomErrorDeserializer","AccountNameRequiredError","AccountNotSupported","AmountRequired","BluetoothRequired","BtcUnmatchedApp","CantOpenDevice","CashAddrNotSupported","CurrencyNotSupported","DeviceAppVerifyNotSupported","DeviceGenuineSocketEarlyClose","DeviceNotGenuineError","DeviceOnDashboardExpected","DeviceOnDashboardUnexpected","DeviceInOSUExpected","DeviceHalted","DeviceNameInvalid","DeviceSocketFail","DeviceSocketNoBulkStatus","DisconnectedDevice","DisconnectedDeviceDuringOperation","EnpointConfigError","EthAppPleaseEnableContractData","FeeEstimationFailed","HardResetFail","InvalidXRPTag","InvalidAddress","InvalidAddressBecauseDestinationIsAlsoSource","LatestMCUInstalledError","UnknownMCU","LedgerAPIError","LedgerAPIErrorWithMessage","LedgerAPINotAvailable","ManagerAppAlreadyInstalledError","ManagerAppRelyOnBTCError","ManagerAppDepInstallRequired","ManagerAppDepUninstallRequired","ManagerDeviceLockedError","ManagerFirmwareNotEnoughSpaceError","ManagerNotEnoughSpaceError","ManagerUninstallBTCDep","NetworkDown","NoAddressesFound","NotEnoughBalance","NotEnoughBalanceToDelegate","NotEnoughBalanceInParentAccount","NotEnoughSpendableBalance","NotEnoughBalanceBecauseDestinationNotCreated","NoAccessToCamera","NotEnoughGas","NotSupportedLegacyAddress","GasLessThanEstimate","PasswordsDontMatchError","PasswordIncorrectError","RecommendSubAccountsToEmpty","RecommendUndelegation","TimeoutTagged","UnexpectedBootloader","MCUNotGenuineToDashboard","RecipientRequired","UnavailableTezosOriginatedAccountReceive","UnavailableTezosOriginatedAccountSend","UpdateYourApp","UserRefusedDeviceNameChange","UserRefusedAddress","UserRefusedFirmwareUpdate","UserRefusedAllowManager","UserRefusedOnDevice","TransportOpenUserCancelled","TransportInterfaceNotAvailable","TransportWebUSBGestureRequired","DeviceShouldStayInApp","WebsocketConnectionError","WebsocketConnectionFailed","WrongDeviceForAccount","WrongAppForCurrency","ETHAddressNonEIP","CantScanQRCode","FeeNotLoaded","FeeRequired","FeeTooHigh","SyncError","PairingFailed","GenuineCheckFailed","LedgerAPI4xx","LedgerAPI5xx","FirmwareOrAppUpdateRequired","NoDBPathGiven","DBWrongPassword","DBNotReset","TransportError","message","id","name","stack","Error","prototype","e","StatusCodes","PIN_REMAINING_ATTEMPTS","INCORRECT_LENGTH","COMMAND_INCOMPATIBLE_FILE_STRUCTURE","SECURITY_STATUS_NOT_SATISFIED","CONDITIONS_OF_USE_NOT_SATISFIED","INCORRECT_DATA","NOT_ENOUGH_MEMORY_SPACE","REFERENCED_DATA_NOT_FOUND","FILE_ALREADY_EXISTS","INCORRECT_P1_P2","INS_NOT_SUPPORTED","CLA_NOT_SUPPORTED","TECHNICAL_PROBLEM","OK","MEMORY_PROBLEM","NO_EF_SELECTED","INVALID_OFFSET","FILE_NOT_FOUND","INCONSISTENT_FILE","ALGORITHM_NOT_SUPPORTED","INVALID_KCV","CODE_NOT_INITIALIZED","ACCESS_CONDITION_NOT_FULFILLED","CONTRADICTION_SECRET_CODE_STATUS","CONTRADICTION_INVALIDATION","CODE_BLOCKED","MAX_VALUE_REACHED","GP_AUTH_FAILED","LICENSING","HALTED","getAltStatusMessage","code","TransportStatusError","statusCode","statusText","Object","keys","find","k","smsg","statusCodeStr","toString"],"mappings":"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","sourcesContent":["// @flow\n\nimport {\n  serializeError,\n  deserializeError,\n  createCustomErrorClass,\n  addCustomErrorDeserializer\n} from \"./helpers\";\n\nexport {\n  serializeError,\n  deserializeError,\n  createCustomErrorClass,\n  addCustomErrorDeserializer\n};\n\nexport const AccountNameRequiredError = createCustomErrorClass(\n  \"AccountNameRequired\"\n);\nexport const AccountNotSupported = createCustomErrorClass(\n  \"AccountNotSupported\"\n);\nexport const AmountRequired = createCustomErrorClass(\"AmountRequired\");\nexport const BluetoothRequired = createCustomErrorClass(\"BluetoothRequired\");\nexport const BtcUnmatchedApp = createCustomErrorClass(\"BtcUnmatchedApp\");\nexport const CantOpenDevice = createCustomErrorClass(\"CantOpenDevice\");\nexport const CashAddrNotSupported = createCustomErrorClass(\n  \"CashAddrNotSupported\"\n);\nexport const CurrencyNotSupported = createCustomErrorClass(\n  \"CurrencyNotSupported\"\n);\nexport const DeviceAppVerifyNotSupported = createCustomErrorClass(\n  \"DeviceAppVerifyNotSupported\"\n);\nexport const DeviceGenuineSocketEarlyClose = createCustomErrorClass(\n  \"DeviceGenuineSocketEarlyClose\"\n);\nexport const DeviceNotGenuineError = createCustomErrorClass(\"DeviceNotGenuine\");\nexport const DeviceOnDashboardExpected = createCustomErrorClass(\n  \"DeviceOnDashboardExpected\"\n);\nexport const DeviceOnDashboardUnexpected = createCustomErrorClass(\n  \"DeviceOnDashboardUnexpected\"\n);\nexport const DeviceInOSUExpected = createCustomErrorClass(\n  \"DeviceInOSUExpected\"\n);\nexport const DeviceHalted = createCustomErrorClass(\"DeviceHalted\");\nexport const DeviceNameInvalid = createCustomErrorClass(\"DeviceNameInvalid\");\nexport const DeviceSocketFail = createCustomErrorClass(\"DeviceSocketFail\");\nexport const DeviceSocketNoBulkStatus = createCustomErrorClass(\n  \"DeviceSocketNoBulkStatus\"\n);\nexport const DisconnectedDevice = createCustomErrorClass(\"DisconnectedDevice\");\nexport const DisconnectedDeviceDuringOperation = createCustomErrorClass(\n  \"DisconnectedDeviceDuringOperation\"\n);\nexport const EnpointConfigError = createCustomErrorClass(\"EnpointConfig\");\nexport const EthAppPleaseEnableContractData = createCustomErrorClass(\n  \"EthAppPleaseEnableContractData\"\n);\nexport const FeeEstimationFailed = createCustomErrorClass(\n  \"FeeEstimationFailed\"\n);\nexport const HardResetFail = createCustomErrorClass(\"HardResetFail\");\nexport const InvalidXRPTag = createCustomErrorClass(\"InvalidXRPTag\");\nexport const InvalidAddress = createCustomErrorClass(\"InvalidAddress\");\nexport const InvalidAddressBecauseDestinationIsAlsoSource = createCustomErrorClass(\n  \"InvalidAddressBecauseDestinationIsAlsoSource\"\n);\nexport const LatestMCUInstalledError = createCustomErrorClass(\n  \"LatestMCUInstalledError\"\n);\nexport const UnknownMCU = createCustomErrorClass(\"UnknownMCU\");\nexport const LedgerAPIError = createCustomErrorClass(\"LedgerAPIError\");\nexport const LedgerAPIErrorWithMessage = createCustomErrorClass(\n  \"LedgerAPIErrorWithMessage\"\n);\nexport const LedgerAPINotAvailable = createCustomErrorClass(\n  \"LedgerAPINotAvailable\"\n);\nexport const ManagerAppAlreadyInstalledError = createCustomErrorClass(\n  \"ManagerAppAlreadyInstalled\"\n);\nexport const ManagerAppRelyOnBTCError = createCustomErrorClass(\n  \"ManagerAppRelyOnBTC\"\n);\nexport const ManagerAppDepInstallRequired = createCustomErrorClass(\n  \"ManagerAppDepInstallRequired\"\n);\nexport const ManagerAppDepUninstallRequired = createCustomErrorClass(\n  \"ManagerAppDepUninstallRequired\"\n);\nexport const ManagerDeviceLockedError = createCustomErrorClass(\n  \"ManagerDeviceLocked\"\n);\nexport const ManagerFirmwareNotEnoughSpaceError = createCustomErrorClass(\n  \"ManagerFirmwareNotEnoughSpace\"\n);\nexport const ManagerNotEnoughSpaceError = createCustomErrorClass(\n  \"ManagerNotEnoughSpace\"\n);\nexport const ManagerUninstallBTCDep = createCustomErrorClass(\n  \"ManagerUninstallBTCDep\"\n);\nexport const NetworkDown = createCustomErrorClass(\"NetworkDown\");\nexport const NoAddressesFound = createCustomErrorClass(\"NoAddressesFound\");\nexport const NotEnoughBalance = createCustomErrorClass(\"NotEnoughBalance\");\nexport const NotEnoughBalanceToDelegate = createCustomErrorClass(\n  \"NotEnoughBalanceToDelegate\"\n);\nexport const NotEnoughBalanceInParentAccount = createCustomErrorClass(\n  \"NotEnoughBalanceInParentAccount\"\n);\nexport const NotEnoughSpendableBalance = createCustomErrorClass(\n  \"NotEnoughSpendableBalance\"\n);\nexport const NotEnoughBalanceBecauseDestinationNotCreated = createCustomErrorClass(\n  \"NotEnoughBalanceBecauseDestinationNotCreated\"\n);\nexport const NoAccessToCamera = createCustomErrorClass(\"NoAccessToCamera\");\nexport const NotEnoughGas = createCustomErrorClass(\"NotEnoughGas\");\nexport const NotSupportedLegacyAddress = createCustomErrorClass(\n  \"NotSupportedLegacyAddress\"\n);\nexport const GasLessThanEstimate = createCustomErrorClass(\n  \"GasLessThanEstimate\"\n);\nexport const PasswordsDontMatchError = createCustomErrorClass(\n  \"PasswordsDontMatch\"\n);\nexport const PasswordIncorrectError = createCustomErrorClass(\n  \"PasswordIncorrect\"\n);\nexport const RecommendSubAccountsToEmpty = createCustomErrorClass(\n  \"RecommendSubAccountsToEmpty\"\n);\nexport const RecommendUndelegation = createCustomErrorClass(\n  \"RecommendUndelegation\"\n);\nexport const TimeoutTagged = createCustomErrorClass(\"TimeoutTagged\");\nexport const UnexpectedBootloader = createCustomErrorClass(\n  \"UnexpectedBootloader\"\n);\nexport const MCUNotGenuineToDashboard = createCustomErrorClass(\n  \"MCUNotGenuineToDashboard\"\n);\nexport const RecipientRequired = createCustomErrorClass(\"RecipientRequired\");\nexport const UnavailableTezosOriginatedAccountReceive = createCustomErrorClass(\n  \"UnavailableTezosOriginatedAccountReceive\"\n);\nexport const UnavailableTezosOriginatedAccountSend = createCustomErrorClass(\n  \"UnavailableTezosOriginatedAccountSend\"\n);\nexport const UpdateYourApp = createCustomErrorClass(\"UpdateYourApp\");\nexport const UserRefusedDeviceNameChange = createCustomErrorClass(\n  \"UserRefusedDeviceNameChange\"\n);\nexport const UserRefusedAddress = createCustomErrorClass(\"UserRefusedAddress\");\nexport const UserRefusedFirmwareUpdate = createCustomErrorClass(\n  \"UserRefusedFirmwareUpdate\"\n);\nexport const UserRefusedAllowManager = createCustomErrorClass(\n  \"UserRefusedAllowManager\"\n);\nexport const UserRefusedOnDevice = createCustomErrorClass(\n  \"UserRefusedOnDevice\"\n); // TODO rename because it's just for transaction refusal\nexport const TransportOpenUserCancelled = createCustomErrorClass(\n  \"TransportOpenUserCancelled\"\n);\nexport const TransportInterfaceNotAvailable = createCustomErrorClass(\n  \"TransportInterfaceNotAvailable\"\n);\nexport const TransportWebUSBGestureRequired = createCustomErrorClass(\n  \"TransportWebUSBGestureRequired\"\n);\nexport const DeviceShouldStayInApp = createCustomErrorClass(\n  \"DeviceShouldStayInApp\"\n);\nexport const WebsocketConnectionError = createCustomErrorClass(\n  \"WebsocketConnectionError\"\n);\nexport const WebsocketConnectionFailed = createCustomErrorClass(\n  \"WebsocketConnectionFailed\"\n);\nexport const WrongDeviceForAccount = createCustomErrorClass(\n  \"WrongDeviceForAccount\"\n);\nexport const WrongAppForCurrency = createCustomErrorClass(\n  \"WrongAppForCurrency\"\n);\nexport const ETHAddressNonEIP = createCustomErrorClass(\"ETHAddressNonEIP\");\nexport const CantScanQRCode = createCustomErrorClass(\"CantScanQRCode\");\nexport const FeeNotLoaded = createCustomErrorClass(\"FeeNotLoaded\");\nexport const FeeRequired = createCustomErrorClass(\"FeeRequired\");\nexport const FeeTooHigh = createCustomErrorClass(\"FeeTooHigh\");\nexport const SyncError = createCustomErrorClass(\"SyncError\");\nexport const PairingFailed = createCustomErrorClass(\"PairingFailed\");\nexport const GenuineCheckFailed = createCustomErrorClass(\"GenuineCheckFailed\");\nexport const LedgerAPI4xx = createCustomErrorClass(\"LedgerAPI4xx\");\nexport const LedgerAPI5xx = createCustomErrorClass(\"LedgerAPI5xx\");\nexport const FirmwareOrAppUpdateRequired = createCustomErrorClass(\n  \"FirmwareOrAppUpdateRequired\"\n);\n\n// db stuff, no need to translate\nexport const NoDBPathGiven = createCustomErrorClass(\"NoDBPathGiven\");\nexport const DBWrongPassword = createCustomErrorClass(\"DBWrongPassword\");\nexport const DBNotReset = createCustomErrorClass(\"DBNotReset\");\n\n/**\n * TransportError is used for any generic transport errors.\n * e.g. Error thrown when data received by exchanges are incorrect or if exchanged failed to communicate with the device for various reason.\n */\nexport function TransportError(message: string, id: string) {\n  this.name = \"TransportError\";\n  this.message = message;\n  this.stack = new Error().stack;\n  this.id = id;\n}\n//$FlowFixMe\nTransportError.prototype = new Error();\n\naddCustomErrorDeserializer(\n  \"TransportError\",\n  e => new TransportError(e.message, e.id)\n);\n\nexport const StatusCodes = {\n  PIN_REMAINING_ATTEMPTS: 0x63c0,\n  INCORRECT_LENGTH: 0x6700,\n  COMMAND_INCOMPATIBLE_FILE_STRUCTURE: 0x6981,\n  SECURITY_STATUS_NOT_SATISFIED: 0x6982,\n  CONDITIONS_OF_USE_NOT_SATISFIED: 0x6985,\n  INCORRECT_DATA: 0x6a80,\n  NOT_ENOUGH_MEMORY_SPACE: 0x6a84,\n  REFERENCED_DATA_NOT_FOUND: 0x6a88,\n  FILE_ALREADY_EXISTS: 0x6a89,\n  INCORRECT_P1_P2: 0x6b00,\n  INS_NOT_SUPPORTED: 0x6d00,\n  CLA_NOT_SUPPORTED: 0x6e00,\n  TECHNICAL_PROBLEM: 0x6f00,\n  OK: 0x9000,\n  MEMORY_PROBLEM: 0x9240,\n  NO_EF_SELECTED: 0x9400,\n  INVALID_OFFSET: 0x9402,\n  FILE_NOT_FOUND: 0x9404,\n  INCONSISTENT_FILE: 0x9408,\n  ALGORITHM_NOT_SUPPORTED: 0x9484,\n  INVALID_KCV: 0x9485,\n  CODE_NOT_INITIALIZED: 0x9802,\n  ACCESS_CONDITION_NOT_FULFILLED: 0x9804,\n  CONTRADICTION_SECRET_CODE_STATUS: 0x9808,\n  CONTRADICTION_INVALIDATION: 0x9810,\n  CODE_BLOCKED: 0x9840,\n  MAX_VALUE_REACHED: 0x9850,\n  GP_AUTH_FAILED: 0x6300,\n  LICENSING: 0x6f42,\n  HALTED: 0x6faa\n};\n\nexport function getAltStatusMessage(code: number): ?string {\n  switch (code) {\n    // improve text of most common errors\n    case 0x6700:\n      return \"Incorrect length\";\n    case 0x6982:\n      return \"Security not satisfied (dongle locked or have invalid access rights)\";\n    case 0x6985:\n      return \"Condition of use not satisfied (denied by the user?)\";\n    case 0x6a80:\n      return \"Invalid data received\";\n    case 0x6b00:\n      return \"Invalid parameter received\";\n  }\n  if (0x6f00 <= code && code <= 0x6fff) {\n    return \"Internal error, please report\";\n  }\n}\n\n/**\n * Error thrown when a device returned a non success status.\n * the error.statusCode is one of the `StatusCodes` exported by this library.\n */\nexport function TransportStatusError(statusCode: number) {\n  this.name = \"TransportStatusError\";\n  const statusText =\n    Object.keys(StatusCodes).find(k => StatusCodes[k] === statusCode) ||\n    \"UNKNOWN_ERROR\";\n  const smsg = getAltStatusMessage(statusCode) || statusText;\n  const statusCodeStr = statusCode.toString(16);\n  this.message = `Ledger device: ${smsg} (0x${statusCodeStr})`;\n  this.stack = new Error().stack;\n  this.statusCode = statusCode;\n  this.statusText = statusText;\n}\n//$FlowFixMe\nTransportStatusError.prototype = new Error();\n\naddCustomErrorDeserializer(\n  \"TransportStatusError\",\n  e => new TransportStatusError(e.statusCode)\n);\n"],"file":"index.js"}